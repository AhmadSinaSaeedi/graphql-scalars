(self.webpackChunk_graphql_scalars_website=self.webpackChunk_graphql_scalars_website||[]).push([[6995],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(f,l(l({ref:t},p),{},{components:r})):n.createElement(f,l({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9945:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return s},toc:function(){return c},default:function(){return u}});var n=r(2122),a=r(9756),o=(r(7294),r(3905)),l={id:"postal-code",title:"PostalCode",sidebar_label:"PostalCode"},i=void 0,s={unversionedId:"scalars/postal-code",id:"scalars/postal-code",isDocsHomePage:!1,title:"PostalCode",description:"We're going to start with a limited set as suggested here",source:"@site/docs/scalars/postal-code.md",sourceDirName:"scalars",slug:"/scalars/postal-code",permalink:"/docs/scalars/postal-code",editUrl:"https://github.com/urigo/graphql-scalars/edit/master/website/docs/scalars/postal-code.md",version:"current",frontMatter:{id:"postal-code",title:"PostalCode",sidebar_label:"PostalCode"},sidebar:"sidebar",previous:{title:"PositiveInt",permalink:"/docs/scalars/positive-int"},next:{title:"RegularExpression",permalink:"/docs/scalars/regular-expression"}},c=[],p={toc:c};function u(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"We're going to start with a limited set as suggested ",(0,o.kt)("a",{parentName:"p",href:"http://www.pixelenvision.com/1708/zip-postal-code-validation-regex-php-code-for-12-countries/"},"here"),"\nand ",(0,o.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/578406/what-is-the-ultimate-postal-code-and-zip-regex"},"here"),"."),(0,o.kt)("p",null,"Which gives us the following countries:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"US - United States"),(0,o.kt)("li",{parentName:"ul"},"UK - United Kingdom"),(0,o.kt)("li",{parentName:"ul"},"DE - Germany"),(0,o.kt)("li",{parentName:"ul"},"CA - Canada"),(0,o.kt)("li",{parentName:"ul"},"FR - France"),(0,o.kt)("li",{parentName:"ul"},"IT - Italy"),(0,o.kt)("li",{parentName:"ul"},"AU - Australia"),(0,o.kt)("li",{parentName:"ul"},"NL - Netherlands"),(0,o.kt)("li",{parentName:"ul"},"ES - Spain"),(0,o.kt)("li",{parentName:"ul"},"DK - Denmark"),(0,o.kt)("li",{parentName:"ul"},"SE - Sweden"),(0,o.kt)("li",{parentName:"ul"},"BE - Belgium"),(0,o.kt)("li",{parentName:"ul"},"IN - India")),(0,o.kt)("p",null,"This is really a practical decision of weight (of the package) vs. completeness."),(0,o.kt)("p",null,"In the future we might expand this list and use the more comprehensive list found ",(0,o.kt)("a",{parentName:"p",href:"http://unicode.org/cldr/trac/browser/tags/release-26-0-1/common/supplemental/postalCodeData.xml"},"here"),"."))}u.isMDXComponent=!0}}]);