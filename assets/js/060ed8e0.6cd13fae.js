(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{135:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),s=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,f=u["".concat(o,".").concat(m)]||u[m]||b[m]||i;return n?a.a.createElement(f,c(c({ref:t},l),{},{components:n})):a.a.createElement(f,c({ref:t},l))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},66:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return s}));var r=n(3),a=n(7),i=(n(0),n(135)),o={id:"big-int",title:"BigInt",sidebar_label:"BigInt"},c={unversionedId:"scalars/big-int",id:"scalars/big-int",isDocsHomePage:!1,title:"BigInt",description:"A long integer type for graphql-js. It uses native BigInt implementation of JavaScript.",source:"@site/docs/scalars/big-int.md",slug:"/scalars/big-int",permalink:"/docs/scalars/big-int",editUrl:"https://github.com/urigo/graphql-scalars/edit/master/website/docs/scalars/big-int.md",version:"current",sidebar_label:"BigInt",sidebar:"sidebar",previous:{title:"Using the RegularExpression Scalar Factory",permalink:"/docs/usage/regex"},next:{title:"Byte",permalink:"/docs/scalars/byte"}},p=[],l={toc:p};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"A long integer type for ",Object(i.b)("a",{parentName:"p",href:"https://github.com/graphql/graphql-js"},"graphql-js"),". ",Object(i.b)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt"},"It uses native ",Object(i.b)("inlineCode",{parentName:"a"},"BigInt")," implementation of JavaScript.")),Object(i.b)("p",null,"If your environment doesn't support ",Object(i.b)("inlineCode",{parentName:"p"},"BigInt"),", it will support 53-bit values at maximum. You can use polyfills to support 64-bit values."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},'GraphQLError: Argument "num" has invalid value 9007199254740990.\n              Expected value of type ""Int"", found 9007199254740990.\n')),Object(i.b)("p",null,"In order to support ",Object(i.b)("inlineCode",{parentName:"p"},"BigInt")," in ",Object(i.b)("inlineCode",{parentName:"p"},"JSON.parse")," and ",Object(i.b)("inlineCode",{parentName:"p"},"JSON.stringify"),", it is recommended to install this npm package together with this scalar. Otherwise, JavaScript will serialize the value as string.\n",Object(i.b)("a",{parentName:"p",href:"https://github.com/ardatan/json-bigint-patch"},"json-bigint-patch")))}s.isMDXComponent=!0}}]);