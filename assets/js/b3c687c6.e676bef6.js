(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{156:function(e,r,n){"use strict";n.r(r),n.d(r,"frontMatter",(function(){return s})),n.d(r,"metadata",(function(){return l})),n.d(r,"toc",(function(){return c})),n.d(r,"default",(function(){return p}));var t=n(3),a=n(8),o=(n(0),n(172)),s={id:"regex",title:"Using the RegularExpression Scalar Factory",sidebar_label:"Generate your own scalars from regular expressions"},l={unversionedId:"usage/regex",id:"usage/regex",isDocsHomePage:!1,title:"Using the RegularExpression Scalar Factory",description:"Using the RegularExpression scalar",source:"@site/docs/usage/regex.md",slug:"/usage/regex",permalink:"/docs/usage/regex",editUrl:"https://github.com/urigo/graphql-scalars/edit/master/website/docs/usage/regex.md",version:"current",sidebar_label:"Generate your own scalars from regular expressions",sidebar:"sidebar",previous:{title:"Using GraphQL Scalars Mocks",permalink:"/docs/usage/mocks"},next:{title:"BigInt",permalink:"/docs/scalars/big-int"}},c=[{value:"Using the RegularExpression scalar",id:"using-the-regularexpression-scalar",children:[]}],i={toc:c};function p(e){var r=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},i,n,{components:r,mdxType:"MDXLayout"}),Object(o.b)("h3",{id:"using-the-regularexpression-scalar"},"Using the RegularExpression scalar"),Object(o.b)("p",null,"First an explanation: To create a new scalar type to the GraphQL schema language, you must create an\ninstance of a new ",Object(o.b)("inlineCode",{parentName:"p"},"GraphQLScalarType")," object that implements three general functions/methods:\n",Object(o.b)("inlineCode",{parentName:"p"},"serialize"),", ",Object(o.b)("inlineCode",{parentName:"p"},"parseValue")," and ",Object(o.b)("inlineCode",{parentName:"p"},"parseLiteral")," which are used at different stages of processing your\nGraphQL types during queries and mutations. So creating a new scalar looks like this:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-javascript"},"const MyScalar = new GraphQLScalarType({\n    'MyScalar',\n\n    description: 'A description of my scalar',\n\n    serialize(value) {\n      // ...\n      return value;\n    },\n\n    parseValue(value) {\n      // ...\n      return value;\n    },\n\n    parseLiteral(ast) {\n      // ...\n      return ast.value;\n    }\n  });\n")),Object(o.b)("p",null,"Given this, if we want to create a new type that is essentially the same except for one little\ncustomizable aspect (e.g., a regular expression type that has all the same code except the regex is\ndifferent) then we need to dynamically ",Object(o.b)("em",{parentName:"p"},"generate")," a new ",Object(o.b)("inlineCode",{parentName:"p"},"GraphQLScalarType")," object given some\nparameters. That's the approach we take here."),Object(o.b)("p",null,"Therefore the ",Object(o.b)("inlineCode",{parentName:"p"},"RegularExpression")," scalar type is really a ",Object(o.b)("inlineCode",{parentName:"p"},"GraphQLScalarType")," object ",Object(o.b)("em",{parentName:"p"},"generator"),"\nthat takes two arguments:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"a name"),Object(o.b)("li",{parentName:"ul"},"the regex you want it to use")),Object(o.b)("p",null,"So to create a new scalar for a given regex, you will do this:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-javascript"},"const MyRegexType = new RegularExpression('MyRegexType', /^ABC$/);\n")),Object(o.b)("p",null,"Now ",Object(o.b)("inlineCode",{parentName:"p"},"MyRegexType"),' is your new GraphQL scalar type that will enforce a value of, in this case, "ABC".'),Object(o.b)("p",null,"Add your new scalar type to your resolver map:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-javascript"},"export default {\n  MyRegexType,\n};\n")),Object(o.b)("p",null,"And to your schema:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"scalar MyRegexType\n")),Object(o.b)("p",null,"That's it. Now you can use ",Object(o.b)("inlineCode",{parentName:"p"},"MyRegexType")," as a type in the rest of your schema."),Object(o.b)("h4",{id:"regularexpression-options"},"RegularExpression options"),Object(o.b)("p",null,"There is an optional third ",Object(o.b)("inlineCode",{parentName:"p"},"options")," argument to the RegularExpression constructor that can be used like this:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-javascript"},"const options = {\n  errorMessage: (regex, value) => {\n    if (process.env.NODE_ENV === 'production')\n      return `Value is invalid format: ${value} `;\n    else\n      return `Value does not match the regular expression ${regex}: ${value}`;\n  },\n};\n\nconst MyRegexType = new RegularExpression('MyRegexType', /^ABC$/, options);\n")))}p.isMDXComponent=!0},172:function(e,r,n){"use strict";n.d(r,"a",(function(){return u})),n.d(r,"b",(function(){return m}));var t=n(0),a=n.n(t);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function s(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?s(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=a.a.createContext({}),p=function(e){var r=a.a.useContext(i),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},u=function(e){var r=p(e.components);return a.a.createElement(i.Provider,{value:r},e.children)},b={inlineCode:"code",wrapper:function(e){var r=e.children;return a.a.createElement(a.a.Fragment,{},r)}},g=a.a.forwardRef((function(e,r){var n=e.components,t=e.mdxType,o=e.originalType,s=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),u=p(n),g=t,m=u["".concat(s,".").concat(g)]||u[g]||b[g]||o;return n?a.a.createElement(m,l(l({ref:r},i),{},{components:n})):a.a.createElement(m,l({ref:r},i))}));function m(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var o=n.length,s=new Array(o);s[0]=g;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l.mdxType="string"==typeof e?e:t,s[1]=l;for(var i=2;i<o;i++)s[i]=n[i];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,n)}g.displayName="MDXCreateElement"}}]);