(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{137:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return s})),r.d(t,"toc",(function(){return l})),r.d(t,"default",(function(){return p}));var n=r(3),a=r(8),o=(r(0),r(168)),i={id:"quick-start",title:"Quick Start",sidebar_label:"Quick Start"},s={unversionedId:"quick-start",id:"quick-start",isDocsHomePage:!1,title:"Quick Start",description:"Installation",source:"@site/docs/quick-start.md",slug:"/quick-start",permalink:"/docs/quick-start",editUrl:"https://github.com/urigo/graphql-scalars/edit/master/website/docs/quick-start.md",version:"current",sidebar_label:"Quick Start",sidebar:"sidebar",previous:{title:"Introduction",permalink:"/docs/introduction"},next:{title:"Usage with Apollo Server",permalink:"/docs/usage/apollo-server"}},l=[{value:"Installation",id:"installation",children:[]},{value:"Integration to your existing GraphQL Schema",id:"integration-to-your-existing-graphql-schema",children:[{value:"In your SDL type definitions",id:"in-your-sdl-type-definitions",children:[]},{value:"Importing it in your resolver map",id:"importing-it-in-your-resolver-map",children:[]},{value:"Adding to the root resolver map",id:"adding-to-the-root-resolver-map",children:[]},{value:"Using it in your type definitions",id:"using-it-in-your-type-definitions",children:[]}]}],c={toc:l};function p(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},c,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"installation"},"Installation"),Object(o.b)("p",null,"To get started with GraphQL Scalars, install the packages as follows"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"npm install --save graphql-scalars")),Object(o.b)("p",null,"or"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"yarn add graphql-scalars")),Object(o.b)("h2",{id:"integration-to-your-existing-graphql-schema"},"Integration to your existing GraphQL Schema"),Object(o.b)("p",null,"GraphQL Scalars is easy to integrate in your existing GraphQL Schema. You need to add a scalar definition to your SDL type definitions and resolvers like below;"),Object(o.b)("h3",{id:"in-your-sdl-type-definitions"},"In your SDL type definitions"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"scalar ScalarName\n")),Object(o.b)("p",null,"You can also import ready-to-use type definitions for scalars like below;"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"// or import specific typeDefs only with ES6 Import\nimport { ScalarNameTypeDefinition } from 'graphql-scalars';\n// or import specific typeDefs only with CommonJS\nconst { ScalarNameTypeDefinition } = require('graphql-scalars');\n// or import all typeDefs once with ES6 Import\nimport { typeDefs as scalarTypeDefs } from 'graphql-scalars';\n// or import all typeDefs once with CommonJS\nconst { typeDefs: scalarTypeDefs } = require('graphql-scalars');\n\nconst typeDefs = [\n  ...scalarTypeDefs,\n  // other typeDefs\n];\n// or\nconst typeDefs = [\n  ScalarNameTypeDefinition,\n  // other typeDefs\n];\n")),Object(o.b)("h3",{id:"importing-it-in-your-resolver-map"},"Importing it in your resolver map"),Object(o.b)("p",null,"You can either import the specific scalar's resolvers or all of the resolvers once."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"// or import specific resolvers only with ES6 Import\nimport { ScalarNameResolver } from 'graphql-scalars';\n// or import specific resolvers only with CommonJS\nconst { ScalarNameResolver } = require('graphql-scalars');\n// or import all resolvers once with ES6 Import\nimport { resolvers as scalarResolvers } from 'graphql-scalars';\n// or import all resolvers once with CommonJS\nconst { resolvers: scalarResolvers } = require('graphql-scalars');\n")),Object(o.b)("h3",{id:"adding-to-the-root-resolver-map"},"Adding to the root resolver map"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"const myResolverMap = {\n  ScalarName: ScalarNameResolver,\n\n  Query: {\n    // more stuff here\n  },\n\n  Mutation: {\n    // more stuff here\n  },\n};\n")),Object(o.b)("h3",{id:"using-it-in-your-type-definitions"},"Using it in your type definitions"),Object(o.b)("p",null,"That's it. Now you can use these scalar types in your schema definition like this:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"type Person {\n  birthDate: DateTime\n  ageInYears: PositiveInt\n\n  heightInInches: PositiveFloat\n\n  minimumHourlyRate: NonNegativeFloat\n\n  currentlyActiveProjects: NonNegativeInt\n\n  email: EmailAddress\n  homePage: URL\n\n  phoneNumber: PhoneNumber\n  homePostalCode: PostalCode\n}\n")),Object(o.b)("p",null,"These scalars can be used just like the base, built-in ones."))}p.isMDXComponent=!0},168:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return b}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=a.a.createContext({}),p=function(e){var t=a.a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),d=n,b=u["".concat(i,".").concat(d)]||u[d]||m[d]||o;return r?a.a.createElement(b,s(s({ref:t},c),{},{components:r})):a.a.createElement(b,s({ref:t},c))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);